// Generated by CoffeeScript 1.9.1
(function() {
  var IndexController, app;

  IndexController = function($scope, $http) {
    $scope.lists = [];
    $scope.people = [];
    $scope.newList = function() {
      var newList;
      newList = {
        name: "New List",
        people: []
      };
      $scope.lists.push(newList);
      $scope.selectList(newList);
      return $http.post("/newList", {
        list: newList
      }).success(function(data, status, headers, config) {
        return delete $scope.error;
      }).error(function(data, status, headers, config) {
        return $scope.error = data;
      });
    };
    $scope.saveList = function() {
      return $http.post("/saveList", {
        list: $scope.selectedList
      }).success(function(data, status, headers, config) {
        return delete $scope.error;
      }).error(function(data, status, headers, config) {
        return $scope.error = data;
      });
    };
    $scope.deleteList = function() {
      $scope.lists = _.filter($scope.lists, function(l) {
        return l.name !== $scope.selectedList.name;
      });
      return $http.post("/deleteList", {
        list: $scope.selectedList
      }).success(function(data, status, headers, config) {
        return delete $scope.error;
      }).error(function(data, status, headers, config) {
        return $scope.error = data;
      });
    };
    $scope.newPerson = function() {
      var newPerson;
      newPerson = {
        name: 'New Person'
      };
      $scope.people.push(newPerson);
      $scope.selectPerson(newPerson);
      return $http.post("/newPerson", {
        person: newPerson
      }).success(function(data, status, headers, config) {
        return delete $scope.error;
      }).error(function(data, status, headers, config) {
        return $scope.error = data;
      });
    };
    $scope.deletePerson = function() {
      $scope.people = _filter($scope.people, function(p) {
        return p.name !== $scope.selectedPerson.name;
      });
      return $http.post("/deletePerson", {
        person: $scope.selectedPerson
      }).success(function(data, status, headers, config) {
        return delete $scope.error;
      }).error(function(data, status, headers, config) {
        return $scope.error = data;
      });
    };
    $scope.savePerson = function() {
      return $http.post("/savePerson", {
        person: $scope.selectedPerson
      }).success(function(data, status, headers, config) {
        return delete $scope.error;
      }).error(function(data, status, headers, config) {
        return $scope.error = data;
      });
    };
    $scope.togglePerson = function(person) {
      var found, list;
      list = $scope.selectedList;
      found = _.find(list.people, function(p) {
        return person.name === p.name;
      });
      if (found) {
        return $scope.removeFromList(person);
      } else {
        return $scope.addToList(person);
      }
    };
    $scope.addToList = function(person) {
      var list;
      list = $scope.selectedList;
      if (person && list) {
        list.people.push(person);
        return $http.post("/addToList", {
          list: list,
          person: person
        }).success(function(data, status, headers, config) {
          return delete $scope.error;
        }).error(function(data, status, headers, config) {
          return $scope.error = data;
        });
      }
    };
    $scope.removeFromList = function(person) {
      var list;
      list = $scope.selectedList;
      if (person && list) {
        list.people = _.filter(list.people, function(p) {
          return p.name !== person.name;
        });
        return $http.post("/removeFromList", {
          list: list,
          person: person
        }).success(function(data, status, headers, config) {
          return delete $scope.error;
        }).error(function(data, status, headers, config) {
          return $scope.error = data;
        });
      }
    };
    $scope.selectList = function(list) {
      var found, i, len, person, ref, results;
      $scope.selectedList = list;
      ref = $scope.people;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        person = ref[i];
        found = _.find(list.people, function(p) {
          return person.name === p.name;
        });
        results.push(person.checked = found !== void 0);
      }
      return results;
    };
    $scope.selectPerson = function(person) {
      return $scope.selectedPerson = person;
    };
    return $scope.closeErrors = function() {
      return delete $scope.error;
    };
  };

  IndexController.$inject = ['$scope', '$http'];

  app = angular.module('CallFanout', ['ngRoute']).config([
    '$routeProvider', function($routeProvider) {
      return $routeProvider.when('/', {
        controller: 'IndexController',
        templateUrl: 'index.html'
      }).otherwise({
        redirectTo: '/'
      });
    }
  ]);

  app.controller('IndexController', IndexController);

}).call(this);
